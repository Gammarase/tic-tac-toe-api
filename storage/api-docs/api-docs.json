{
    "openapi": "3.0.0",
    "info": {
        "title": "TicTacToe API",
        "version": "0.1"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "89bd2331df6e6d3caad7a2d2c5bd2e90",
                "requestBody": {
                    "description": "Registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "YOUR_ACCESS_TOKEN"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "property": {
                                                        "type": "string",
                                                        "example": "email"
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "The email field must be a valid email address."
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login as an existing user",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "description": "Login data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "YOUR_ACCESS_TOKEN"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "property": {
                                                        "type": "string",
                                                        "example": "email"
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "The email field must be a valid email address."
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "No user with this email/Wrong password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lobby/create": {
            "post": {
                "tags": [
                    "Lobby"
                ],
                "summary": "Create a new lobby",
                "description": "Creates a new lobby for a game figure.",
                "operationId": "38b790cb229013d0f8b9f5fea0211629",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLobbyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lobby created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LobbyResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lobby/join/{lobby}": {
            "get": {
                "tags": [
                    "Lobby"
                ],
                "summary": "Join an existing lobby",
                "description": "Joins an existing lobby using the lobby's ID.",
                "operationId": "0bc6e18b245f0e088d9770e6c0651675",
                "parameters": [
                    {
                        "name": "lobby",
                        "in": "path",
                        "description": "ID of the lobby to join",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Joined lobby successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LobbyResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lobby not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The lobby is full",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "The lobby is full"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lobby/{lobby}/move": {
            "post": {
                "tags": [
                    "Lobby"
                ],
                "summary": "Make a move in the lobby",
                "description": "Make a move in the lobby.",
                "operationId": "0dd1913cf680d137a16dafd2e0b1692d",
                "parameters": [
                    {
                        "name": "lobby",
                        "in": "path",
                        "description": "The ID of the lobby",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MakeMoveRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "Ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "You are not a player of this game"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "The game is already finished/Need two players to start the game/It is not your turn/The cell is already filled"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lobby not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Lobby not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the current user",
                "description": "Returns information about the currently authenticated user.",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user information",
                "description": "Update the user's username and email.",
                "operationId": "updateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "property": {
                                                        "type": "string",
                                                        "example": "email"
                                                    },
                                                    "errors": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "The email field must be a valid email address."
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "title": "Login Request",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "The user's email address",
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "password": {
                        "description": "The user's password",
                        "type": "string",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "RegistrationRequest": {
                "required": [
                    "username",
                    "email",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "CreateLobbyRequest": {
                "description": "Create Lobby Request",
                "properties": {
                    "figure": {
                        "description": "The game figure to be used (0 for nought, 1 for cross)",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    }
                },
                "type": "object"
            },
            "MakeMoveRequest": {
                "title": "MakeMoveRequest",
                "description": "Request body for making a move in the tic-tac-toe game.",
                "required": [
                    "x",
                    "y"
                ],
                "properties": {
                    "x": {
                        "description": "The x-coordinate of the move.",
                        "type": "integer",
                        "maximum": 2,
                        "minimum": 0,
                        "example": 0
                    },
                    "y": {
                        "description": "The y-coordinate of the move.",
                        "type": "integer",
                        "maximum": 2,
                        "minimum": 0,
                        "example": 0
                    }
                },
                "type": "object"
            },
            "LobbyResource": {
                "description": "Lobby resource representation",
                "properties": {
                    "id": {
                        "description": "The ID of the lobby",
                        "type": "integer",
                        "format": "int64"
                    },
                    "winner": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "status": {
                        "description": "The status of the lobby, 0 - initialized, 1 - in progress, 2 - finished",
                        "type": "integer",
                        "default": 0,
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "example": 0
                    },
                    "state": {
                        "description": "The state of the game, -1 - empty, 0 - nought, 1 - cross",
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "description": "The state of the cell, -1 - empty, 0 - nought, 1 - cross",
                                "type": "integer",
                                "default": -1,
                                "enum": [
                                    -1,
                                    0,
                                    1
                                ],
                                "example": 0
                            },
                            "example": [
                                -1,
                                0,
                                -1
                            ]
                        },
                        "example": [
                            [
                                -1,
                                0,
                                -1
                            ],
                            [
                                0,
                                1,
                                1
                            ],
                            [
                                -1,
                                0,
                                1
                            ]
                        ]
                    },
                    "finished_at": {
                        "description": "The timestamp when the lobby finished",
                        "type": "string",
                        "format": "date-time"
                    },
                    "players": {
                        "description": "Array of players in the lobby",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResourceWithFigure"
                        }
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "example": "john_doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-29T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-30T14:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserResourceWithFigure": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "example": "john_doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-29T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-30T14:30:00Z"
                    },
                    "figure": {
                        "description": "0 - nought, 1 - cross",
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "example": 0
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Bearer <token>",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Endpoints for user registration and login"
        },
        {
            "name": "Lobby",
            "description": "Operations related to lobbies"
        },
        {
            "name": "User",
            "description": "Operations related to user management"
        }
    ]
}